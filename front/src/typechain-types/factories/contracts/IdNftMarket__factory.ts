/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, type Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  IdNftMarket,
  IdNftMarketInterface,
} from "../../contracts/IdNftMarket";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "nftAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "buyer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "seller",
        type: "address",
      },
    ],
    name: "BoughtItem",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "nftAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "buyer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "seller",
        type: "address",
      },
    ],
    name: "CanceledSaleOrder",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "nftAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "buyer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "seller",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "endTime",
        type: "uint256",
      },
    ],
    name: "CreatedSaleOrder",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "orderId",
        type: "uint256",
      },
    ],
    name: "buy",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "orderId",
        type: "uint256",
      },
    ],
    name: "cancelSaleOrder",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "nftAddress",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "buyer",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "endTime",
            type: "uint256",
          },
        ],
        internalType: "struct idNftMarket.saleOrderParams",
        name: "params",
        type: "tuple",
      },
    ],
    name: "createSaleOrder",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040526000805534801561001457600080fd5b50610905806100246000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80639116b0e714610046578063b17c6ab81461006b578063d96a094a14610080575b600080fd5b61005961005436600461081e565b610093565b60405190815260200160405180910390f35b61007e610079366004610836565b6103c2565b005b61007e61008e366004610836565b6105ca565b60006080820135156100ed5781608001354211156100ed5760405162461bcd60e51b8152602060048201526012602482015271696e76616c69642074696d652072616e676560701b60448201526064015b60405180910390fd5b60006100fc6020840184610867565b6040516331a9108f60e11b81526020850135600482015290915033906001600160a01b03831690636352211e90602401602060405180830381865afa158015610149573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061016d919061088b565b6001600160a01b0316146101b35760405162461bcd60e51b815260206004820152600d60248201526c3737ba1037333a1037bbb732b960991b60448201526064016100e4565b6040516323b872dd60e01b8152336004820152306024820152602084013560448201526001600160a01b038216906323b872dd90606401600060405180830381600087803b15801561020457600080fd5b505af1158015610218573d6000803e3d6000fd5b50506000546040805160e08101909152818152909250905060208082019061024290870187610867565b6001600160a01b0316815260200185602001358152602001856040013581526020018560600160208101906102779190610867565b6001600160a01b0390811682523360208084019190915260808881013560409485015260008681526001808452858220875181559387015190840180546001600160a01b03199081169287169290921790559486015160028401556060860151600384015590850151600483018054861691851691909117905560a085015160058301805490951693169290921790925560c09092015160069091015580549080610321836108a8565b909155507f18fc58e855c20f49a28c1eae2ff224198aa7e6bb376ee64873849b087b0f8f6a9050816103566020870187610867565b602087013560408801353361037160808b0160608c01610867565b604080519687526001600160a01b03958616602088015286019390935260608501919091528216608084810191909152911660a083015286013560c082015260e00160405180910390a19392505050565b600081815260016020818152604092839020835160e08101855281548152928101546001600160a01b03908116928401929092526002810154938301939093526003830154606083015260048301548116608083015260058301541660a0820181905260069092015460c082015290331461046c5760405162461bcd60e51b815260206004820152600a6024820152693737ba1039b2b63632b960b11b60448201526064016100e4565b600082815260016020819052604091829020908101546002909101549151632142170760e11b8152306004820152336024820152604481018390526001600160a01b03909116919082906342842e0e90606401600060405180830381600087803b1580156104d957600080fd5b505af11580156104ed573d6000803e3d6000fd5b505050507f65cf1ab150a7a4ceec66d508472b4c73adc7abec952019b20512892f4b63c02e848460200151856040015186606001518760a00151886080015160405161056f969594939291909586526001600160a01b03948516602087015260408601939093526060850191909152821660808401521660a082015260c00190565b60405180910390a15050506000908152600160208190526040822082815590810180546001600160a01b0319908116909155600282018390556003820183905560048201805482169055600582018054909116905560060155565b600081815260016020818152604092839020835160e08101855281548152928101546001600160a01b0390811692840192909252600281015493830193909352600383015460608301526004830154811660808301819052600584015490911660a083015260069092015460c082015290331461067b5760405162461bcd60e51b815260206004820152600f60248201526e34b731b7b93932b1ba10313abcb2b960891b60448201526064016100e4565b60608101513331116106bd5760405162461bcd60e51b815260206004820152600b60248201526a6c6f772062616c616e636560a81b60448201526064016100e4565b6060810151604051339180156108fc02916000818181858888f193505050501580156106ed573d6000803e3d6000fd5b50600082815260016020819052604080832091820180546002840180548686556001600160a01b0319808416909455908690556003850186905560048086018054851690556005860180549094169093556006909401949094559051632142170760e11b81523091810191909152336024820152604481018290526001600160a01b039092169182906342842e0e90606401600060405180830381600087803b15801561079957600080fd5b505af11580156107ad573d6000803e3d6000fd5b50505060608085015160a080870151604080516001600160a01b03808a168252602082018990529181019490945233948401949094529290921660808201527f27630153b5dc007a7ed93cedf46932117c03b3f68431be642a18b1b76f5a814492500160405180910390a150505050565b600060a0828403121561083057600080fd5b50919050565b60006020828403121561084857600080fd5b5035919050565b6001600160a01b038116811461086457600080fd5b50565b60006020828403121561087957600080fd5b81356108848161084f565b9392505050565b60006020828403121561089d57600080fd5b81516108848161084f565b6000600182016108c857634e487b7160e01b600052601160045260246000fd5b506001019056fea26469706673582212203cbdc4fe5d71b990ab1dc8181281926388e3625af5b96c4810f5d046b7f8437d64736f6c63430008120033";

type IdNftMarketConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: IdNftMarketConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class IdNftMarket__factory extends ContractFactory {
  constructor(...args: IdNftMarketConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string }
  ): Promise<IdNftMarket> {
    return super.deploy(overrides || {}) as Promise<IdNftMarket>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): IdNftMarket {
    return super.attach(address) as IdNftMarket;
  }
  override connect(signer: Signer): IdNftMarket__factory {
    return super.connect(signer) as IdNftMarket__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): IdNftMarketInterface {
    return new utils.Interface(_abi) as IdNftMarketInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IdNftMarket {
    return new Contract(address, _abi, signerOrProvider) as IdNftMarket;
  }
}
